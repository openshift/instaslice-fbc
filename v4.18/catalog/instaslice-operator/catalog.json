{
  "schema": "olm.package",
  "name": "das-operator",
  "defaultChannel": "stable-v0.1"
}
{
  "schema": "olm.channel",
  "name": "stable-v0.1",
  "package": "das-operator",
  "entries": [
    {
      "name": "das-operator.v0.1.0"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "das-operator.v0.1.0",
  "package": "das-operator",
  "image": "registry.redhat.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-operator-bundle-next@sha256:3542c0ca310b9c93fa6512bb9fc6e18db153931dccf2ccefef2d4d10023eb4c9",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "inference.redhat.com",
        "kind": "AllocationClaim",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "inference.redhat.com",
        "kind": "DASOperator",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "inference.redhat.com",
        "kind": "NodeAccelerator",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "das-operator",
        "version": "0.1.0"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"inference.redhat.com/v1alpha1\",\n    \"kind\": \"DASOperator\",\n    \"metadata\": {\n      \"name\": \"cluster\",\n      \"namespace\": \"das-operator\"\n    },\n    \"spec\": {\n      \"logLevel\": \"Normal\",\n      \"managementState\": \"Managed\",\n      \"operatorLogLevel\": \"Normal\"\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Drivers and plugins",
          "containerImage": "registry.redhat.io/dynamic-accelerator-slicer-tech-preview/instaslice-rhel9-operator@sha256:38c4deec455c6ce493c40b6332831f7bce93c9087229b16ede72515ef452a344",
          "createdAt": "2025-07-10T20:05:15Z",
          "description": "InstaSlice works with GPU operator to create mig slices on demand",
          "features.operators.openshift.io/cnf": "false",
          "features.operators.openshift.io/cni": "false",
          "features.operators.openshift.io/csi": "false",
          "features.operators.openshift.io/disconnected": "false",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Kubernetes Engine\", \"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "operators.operatorframework.io/builder": "operator-sdk-v1.40.0",
          "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
          "repository": "https://github.com/openshift/instaslice-operator",
          "support": "https://github.com/openshift/instaslice-operator/issues"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "dasoperators.inference.redhat.com",
              "version": "v1alpha1",
              "kind": "DASOperator"
            },
            {
              "name": "allocationclaims.inference.redhat.com",
              "version": "v1alpha1",
              "kind": "AllocationClaim"
            },
            {
              "name": "nodeaccelerators.inference.redhat.com",
              "version": "v1alpha1",
              "kind": "NodeAccelerator"
            }
          ]
        },
        "description": "### Introduction\nInstaSlice uses stable APIs and works with GPU operator to create mig slices on demand.\n\n### Prerequisites\n\n1. Install the [NVIDIA GPU drivers and CUDA toolkit](https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#driver-installation) on the host.\n2. Install the [NVIDIA Container Toolkit (CTK)](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html).\n3. Configure the NVIDIA Container Runtime as the default Docker runtime:\n      `sudo nvidia-ctk runtime configure --runtime=docker --set-as-default`\n4. Restart Docker to apply the changes:\n      `sudo systemctl restart docker`\n5. Configure the NVIDIA Container Runtime to use volume mounts to select devices to inject into a container:\n      `sudo nvidia-ctk config --set accept-nvidia-visible-devices-as-volume-mounts=true --in-place`\n      This sets accept-nvidia-visible-devices-as-volume-mounts=true in the /etc/nvidia-container-runtime/config.toml file\n6. Enable MIG on the GPU\n      Check if MIG is enabled on the host GPU - look for Enabled in the third row of the nvidia GPU table, while running `nvidia-smi`\n7. Create symlink in the control-plane container\n      `docker exec -ti kind-control-plane ln -s /sbin/ldconfig /sbin/ldconfig.real`\n8. Unmount the nvidia devices in the control-plane container\n      `docker exec -ti kind-control-plane umount -R /proc/driver/nvidia`\n9. Install the GPU Operator\n      `helm upgrade --install --wait gpu-operator -n gpu-operator --create-namespace nvidia/gpu-operator \\\n        --set mig.strategy=mixed \\\n        --set cdi.enabled=true \\\n        --set migManager.enabled=false \\\n        --set migManager.config.default=\"\"`\n10. Deploy cert manager\n      `kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.3/cert-manager.yaml`\n      \n### API Backward Compatibility\n**NOTE:**  Until Operator supports **seamless upgrades**, a new version of\nthe operator may introduce a change that is **NOT** backwards compatible with\nthe previous version. Thus, to upgrade the operator, uninstall the already\ninstalled version completely (including CRDs) and install the new version.\nFor example to upgrade from 0.1.0 to 0.2.0, you must uninstall `0.1.0` by\nfollowing [uninstall operator section](https://github.com/openshift/instaslice-operator)\nand install the new version.\n\nChanges to patch version (major.minor.patch) indicates that no breaking changes\nare introduced, thus upgrade can be done without uninstalling and reinstalling\nthe operator.\n\n### Why Instaslice\n\nPartitionable accelerators provided by vendors need partition to be created at node boot-time or to change partitions one would have to evict all the workloads at the node level to create new set of partitions.\n\nInstaSlice will help if:\n\n- user does not know all the accelerators partitions needed a priori on every node on the cluster\n\n- user partition requirements change at the workload level rather than the node level\n\n- user does not want to learn or use new API to request accelerators slices\n\n- user prefers to use stable device plugins APIs for creating partitions\n\n###Features Overview\n\n- Integration with Kubernetes [quota management](https://github.com/openshift/instaslice-operator/blob/main/docs/instaslice_kube_quota_int.md)\n\n- Integration with project [Kueue](https://github.com/openshift/instaslice-operator/blob/main/docs/kueue.md)\n\n- [Emulator](https://github.com/openshift/instaslice-operator/blob/main/docs/emulator.md) mode to run test InstaSlice firstfit placement strategy\n\n- Integration with vLLM, Kserve, [Deployments](https://github.com/openshift/instaslice-operator/blob/main/samples/vllm_deployment.yaml), [Jobs](https://github.com/openshift/instaslice-operator/blob/main/samples/vllm_job.yaml), and [Statefulsets](https://github.com/openshift/instaslice-operator/blob/main/samples/vllm_statefulset.yaml)\n\n### Documentation\nDocumentation and installation guide can be found below:\n  * [Installation Guide](https://github.com/openshift/instaslice-operator)\n  * [Instaslice Operator](https://github.com/openshift/instaslice-operator/blob/main/README.md)\n\n### License\ninstaslice-operator is licensed under the Apache 2.0 license",
        "displayName": "Instaslice",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "GPU Slicing",
          "MIG"
        ],
        "links": [
          {
            "name": "Instaslice Operator",
            "url": "https://github.com/openshift/instaslice-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Abhishek Malvankar",
            "email": "amalvank@redhat.com"
          },
          {
            "name": "Cameron Meadors",
            "email": "cmeadors@redhat.com"
          },
          {
            "name": "Harshal Patil",
            "email": "harpatil@redhat.com"
          },
          {
            "name": "Kevin Hannon",
            "email": "kehannon@redhat.com"
          },
          {
            "name": "Mohammed Abdi",
            "email": "mmunirab@redhat.com"
          },
          {
            "name": "Mrunal Patel",
            "email": "mpatel@redhat.com"
          },
          {
            "name": "Olivier Tardieu",
            "email": "tardieu@us.ibm.com"
          },
          {
            "name": "Ryan Phillips",
            "email": "rphillip@redhat.com"
          },
          {
            "name": "Sai Ramesh Vanka",
            "email": "svanka@redhat.com"
          },
          {
            "name": "Vitaliy Emporopulo",
            "email": "vemporop@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.16.0",
        "provider": {
          "name": "Codeflare",
          "url": "https://github.com/openshift/instaslice-operator"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "operator-bundle",
      "image": "registry.redhat.io/dynamic-accelerator-slicer-tech-preview/instaslice-operator-bundle-next@sha256:3542c0ca310b9c93fa6512bb9fc6e18db153931dccf2ccefef2d4d10023eb4c9"
    },
    {
      "name": "daemonset-image",
      "image": "registry.redhat.io/dynamic-accelerator-slicer-tech-preview/instaslice-daemonset-next@sha256:9f375408f93bc3bf49008fdf046bf988993db7a74e59b2e33dca66c90ed05430"
    },
    {
      "name": "operator-image",
      "image": "registry.redhat.io/dynamic-accelerator-slicer-tech-preview/instaslice-operator-next@sha256:38c4deec455c6ce493c40b6332831f7bce93c9087229b16ede72515ef452a344"
    },
    {
      "name": "scheduler-image",
      "image": "registry.redhat.io/dynamic-accelerator-slicer-tech-preview/instaslice-scheduler-next@sha256:cfee9b1228ae98b1a52a688b84efaf7cb57d5ad041abd1e716c59f38a5bd0e51"
    },
    {
      "name": "webhook-image",
      "image": "registry.redhat.io/dynamic-accelerator-slicer-tech-preview/instaslice-webhook-next@sha256:7e28fea4e88c30c1f4a346b537c9a1a31e2ad380aa21e965cb6838020f601bab"
    }
  ]
}
